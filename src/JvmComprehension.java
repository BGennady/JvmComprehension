
// ClassLoader загружает в память (Metaspace)
// информацию о классе JvmComprehension (методы, поля, и пр.)
public class JvmComprehension {

// JVM создает фрейм в стеке для метода main
// он будет содержать локальные переменные и ссылки на объекты
    public static void main(String[] args) {

        //      примитивная переменная int i сохраняется в текущем фрейме стека
        int i = 1;

        // в в хипе создается новый Object
//      сылка на него присваивается локальной переменной о
//      и сохраняется текущем фрейме стека метода main
        Object o = new Object();

//      примитивное значение 2 упаковывается в объект Integer и сохраняется в хипе
//      ссылка на объект присваивается локальной переменной ii
//      в текущем фрейме стека метода main.
        Integer ii = 2;

//      вызов метода приводит к созданию нового фрейма в стеке
//      ссылки на объекты и значения переменных копируются в новый фрейм
        printAll(o, i, ii);

//      строка "finished" была создана и помещена в String Pool во время загрузки
//      класса JvmComprehension, JVM вызывает команду по ссылке в хипе
        System.out.println("finished"); // 7
    }

    private static void printAll(Object o, int i, Integer ii) {

//      примитивное значение 700 упаковывается в объект Integer и сохраняется в хипе
//      ссылка на объект присваивается локальной переменной uselessVar
//      в текущем фрейме стека метода printAll
        Integer uselessVar = 700;

//      метод toString() вызывается для объекта o, и результат объеденяем
//      с переменными i и ii(преобразуется из объекта Integer в примитив)
//      ссылка на строку создается и помещается в хип
        System.out.println(o.toString() + i + ii);  // 6
    }
}





